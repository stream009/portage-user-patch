diff --git a/src/widgets/dropjob.cpp b/src/widgets/dropjob.cpp
index 139e6ea..ee93065 100644
--- a/src/widgets/dropjob.cpp
+++ b/src/widgets/dropjob.cpp
@@ -42,6 +42,7 @@
 #include <KUrlMimeData>
 #include <KRun>
 #include <KService>
+#include <KSharedConfig>
 
 #include <QApplication>
 #include <QDebug>
@@ -163,6 +164,24 @@ void DropJobPrivate::slotStart()
     }
 }
 
+static Qt::DropAction defaultDropAction()
+{
+    const auto &kioConfig =
+                    KSharedConfig::openConfig("kiorc", KConfig::NoGlobals);
+
+    const auto &group = kioConfig->group("Drop job");
+    const auto &result = static_cast<Qt::DropAction>(
+                        group.readEntry("defaultDropAction",
+                                        static_cast<int>(Qt::IgnoreAction)));
+
+    const auto &isValid = (result == Qt::IgnoreAction ||
+                           result == Qt::CopyAction ||
+                           result == Qt::MoveAction);
+    Q_ASSERT(isValid);
+
+    return isValid ? result : Qt::IgnoreAction;
+}
+
 // Input: m_dropAction as set by Qt at the time of the drop event
 // Output: m_dropAction possibly modified
 // Returns a KIO error code, in case of error.
@@ -211,6 +230,24 @@ int DropJobPrivate::determineDropAction()
         m_dropAction = Qt::MoveAction;
         return KJob::NoError; // ok
     }
+
+    const auto &defaultAction = defaultDropAction();
+    if (defaultAction != Qt::IgnoreAction) {
+        if (m_keyboardModifiers & Qt::AltModifier) {
+            // Use Alt key to cancel default action and ask user with a popup.
+            return KIO::ERR_UNKNOWN;
+        } else if (
+               m_keyboardModifiers & (Qt::ControlModifier | Qt::ShiftModifier))
+        {
+            // Qt determined m_dropAction from the modifiers already
+            return KJob::NoError;
+        }
+
+        // Use configured default action if there are no (relevant) modifiers.
+        m_dropAction = defaultAction;
+        return KJob::NoError; // ok
+    }
+
     if (m_keyboardModifiers & (Qt::ControlModifier | Qt::ShiftModifier | Qt::AltModifier)) {
         // Qt determined m_dropAction from the modifiers already
         return KJob::NoError; // ok
